`timescale 1ns / 1ps

 

module TopLevel(

    input clk,

    output h_sync,

    output v_sync,

    output [3:0] red ,

    output [3:0] green ,

    output [3:0] blue

);

wire video_on;

    wire [9:0] x_loc;

    wire [9:0] y_loc;

    wire clk_d;

    wire trig_v;

    wire [9:0] h_count;

    wire [9:0] v_count;

clk_div c1 (clk, clk_d);

h_counter h1 (clk_d,trig_v,h_count);

v_counter v1 (clk_d, trig_v, v_count);

VGA vv1 (h_sync, v_sync,h_count,v_count,video_on, x_loc, y_loc);

pixel_gen p1 (clk_d, x_loc, y_loc, video_on, red, green, blue);

 

endmodule  

 

 

module h_counter(clk,trig_v,h_counter);

input clk;

output trig_v;

output [9:0] h_counter;

reg trig_v;

reg [9:0]h_counter;

 

initial begin

h_counter = 0;

trig_v = 0;

end

always @ (posedge clk)

    begin

        if (h_counter <= 798)

            begin

                h_counter <= h_counter + 1;

                trig_v <= 0;

            end

        else

            begin

                h_counter <= 0;

                trig_v <= 1;

        end

    end

 

endmodule

 

 

module v_counter(clk, enable_v, v_count);

input clk;

input enable_v;

output [9:0] v_count;

reg [9:0] v_count;

 

initial begin

v_count = 0;

end

always @ (posedge clk)

    begin

        if (enable_v == 1)

            begin

                if (v_count <= 524)

                    v_count <= v_count + 1;      

                else

                        v_count <= 0;

             end

       

    end

endmodule

 

 

module clk_div(clk, clk_d);

parameter div_val = 1;

input clk;

output clk_d;

reg clk_d;

reg count;

 

initial begin

clk_d = 0;

count = 0;

end

 

always @ (posedge clk)

    begin

        if (count == div_val)

            begin

                count <= 0;

            end

        else

            count <= count + 1;

    end

always @ (posedge clk)

    begin

        if (count == div_val)

            clk_d = ~clk_d;

    end

endmodule

 

 

 

 

module VGA(h_sync, v_sync,h_count,v_count,video_on, x_loc, y_loc);

output h_sync;

output v_sync;

output video_on;

output [9:0] x_loc;

output [9:0] y_loc;

input [9:0] h_count;

input [9:0] v_count;

 

localparam HD = 640;

localparam HF = 16;

localparam HB = 48;

localparam HR = 96;

 

localparam VD = 480;

localparam VF = 10;

localparam VB = 33;

localparam VR = 2;

 

assign h_sync = (h_count<=655)?1:(h_count>=752)?1:0;

assign v_sync = (v_count<=489)?1:(v_count>=492)?1:0;

assign video_on = (h_count <= 639) ? ((v_count <= 479) ? 1 : 0) : 0;

assign x_loc = h_count;

assign y_loc = v_count;

 

endmodule                                      
                                               

module pixel_gen(

input clk_d,

input [9:0] pixel_x,

input [9:0] pixel_y,

input video_on,

output reg [3:0] red = 0,

output reg [3:0] green = 0,

output reg [3:0] blue = 0

);


wire y = (pixel_y >= 100 & pixel_y <= 250 & pixel_x >= 12 & pixel_x <= 42) || (pixel_y >= 100 & pixel_y <= 250 & pixel_x >= 73 & pixel_x <= 103) || (pixel_y >= 200 & pixel_y <= 380 & pixel_x >= 42 & pixel_x <= 73);

wire o = (pixel_y >= 100 & pixel_y <= 140 & pixel_x >= 115 & pixel_x <= 205) || (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 115 & pixel_x <= 155) || (pixel_x >= 166 & pixel_x <= 206 & pixel_y >= 100 & pixel_y <= 380) || (pixel_y >= 340 & pixel_y <= 380 & pixel_x >= 115 & pixel_x <= 205);

wire u = (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 216 & pixel_x <= 246) || (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 273 & pixel_x <= 307) || (pixel_y >= 340 & pixel_y <= 380 & pixel_x >= 216 & pixel_x <= 307);

wire w = (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 333 & pixel_x <= 353) || (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 369 & pixel_x <= 389) || (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 404 & pixel_x <= 424) || (pixel_y >= 340 & pixel_y <= 380 & pixel_x >= 333 & pixel_x <= 424);

wire i = (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 435 & pixel_x <= 475);

wire n = (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 485 & pixel_x <= 515) || (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 537 & pixel_x <= 557) || (pixel_y >= 100 & pixel_y <= 380 & pixel_x >= 577 & pixel_x <= 607) || (pixel_y >= 100 & pixel_y <= 140 & pixel_x >= 510 & pixel_x <= 537) || (pixel_y >= 340 & pixel_y <= 380 & pixel_x >= 557 & pixel_x <= 577);

always @(posedge clk_d) begin

          red <= video_on ? (y ? 4'hF: (o ? 4'h0: (u ? 4'h0: (w ? 4'hF: (i ? 4'hF: (n ? 4'h0: 4'h0)))))) : 4'h0;

          green <= video_on ? (y ? 4'h0: (o ? 4'hF: (u ? 4'h0: (w ? 4'hF: (i ? 4'h0: (n ? 4'hF: 4'h0)))))) : 4'h0;

        blue <= video_on ? (y ? 4'h0: (o ? 4'h0: (u ? 4'hF: (w ? 4'h0: (i ? 4'hF: (n ? 4'hF: 4'h0)))))) : 4'h0;
end
endmodule